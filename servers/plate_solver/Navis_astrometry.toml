output_folder = "output" #Folder for output
IP = "192.168.1.3"
camera_port = "4102"
camera_port_name = "FST"
robot_control_port = "4100"
target_IP = "192.168.1.4" #Target server runs on Dextra
target_port = "4203"

platesolver_index = 0

path_to_data = "/home/pyxisuser/pyxis/servers/fine_star_tracker"

[Tetra3]
bg_sub_mode = "local_mean" #"Continuous" is default
sigma_mode = "global_root_square" #"Mono16" is default
filt_size = 15 #Size of filter

[SExtractor]
filter_kernel = [[1, 1], [1, 1]]
thresh = 1.6
deblend_cont = 0.2
minarea = 6

[Astrometry]
depth = 10 #How many stars to match?
FOV_min = 0.7 #minimum estimate of FOV in degrees
FOV_max = 1.5 #maximum estimate of FOV in degrees
ref_pix_x = 1536 #x reference pixel for WCS solution
ref_pix_y = 1024 #y reference pixel for WCS solution

    [Astrometry.estimate_position] # Use this to search for a solution around where we previously were
    flag = 0
    ra = 0
    dec = 0
    rad = 5 #Make this small to increase speed, but increase chance of failure. The radius in degrees to search for the solution centred at ra/dec